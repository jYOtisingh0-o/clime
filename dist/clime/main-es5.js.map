{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/routes.ts","webpack:///src/app/services/weather.service.ts","webpack:///src/app/services/weathercoord.service.ts","webpack:///src/app/today/today.component.ts","webpack:///src/app/today/today.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","FooterComponent","HeaderComponent","HomeComponent","formBuilder","weatherService","weatherSearchForm","group","location","weatherData","main","isDay","getWeatherData","console","log","formValues","getWeather","subscribe","data","fetch","response","json","setWeatherData","sunsetTime","Date","sys","sunset","sunset_time","toLocaleTimeString","currentDate","getTime","temp_celcius","temp","toFixed","temp_min","temp_max","temp_feels_like","feels_like","sendToService","LoginComponent","routes","path","redirectTo","pathMatch","component","WeatherService","http","apikey","get","providedIn","WeathercoordService","lat","lon","icon_id","TodayComponent","weathercoordService","sendtoService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { routes } from './routes';\n\n\n// const routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clime';\n}\n"," <app-header></app-header>\n<router-outlet></router-outlet> \n<app-footer></app-footer>  \n<!-- <app-today></app-today> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { AboutComponent } from './about/about.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatListModule } from'@angular/material/list';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule, MatCard } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { TodayComponent } from './today/today.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    AboutComponent,\n    TodayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    HttpClientModule,\n    ReactiveFormsModule,\n    \n    MatToolbarModule,\n    FlexLayoutModule,\n    MatButtonModule,\n\n    MatListModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSlideToggleModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <div>\n        <div>\n            <div>\n                <h4>Links</h4>\n                <a href=\"#\">Home</a>\n                <a href=\"#\">About</a>\n                <a href=\"#\">Contact</a>\n            </div>\n            <div>\n                <h4>Our Address</h4>\n                <address >\n                    129/404, Sam valley<br> xyz India <br>INDIA<br>\n                    <i>:001100223</i><br>\n                    <i>:112299003</i>:\n                    <a href=\"mailto:clime@weather.net\">clime@weather.net</a>\n                </address>\n            </div>\n            <div>\n               <p>© Copyright 2020 Clime</p> \n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color = \"primary\">\n    <span>Clime`</span>\n</mat-toolbar>\n<mat-toolbar color = \"primary\" class=\"links\">\n    <span><i class=\"fas fa-3x fa-cloud cloud\"></i></span>\n    <a mat-button routerLink = './home' routerLinkActive = 'active' ><span></span>Home</a>\n    <a mat-button routerLink = \"#\"><span></span>About</a>\n    <a mat-button routerLink = './search-for-coods' routerLinkActive = 'active'><span></span>Search for Coordinates</a>\n    <a mat-button href=\"#\"><span></span>Contact us</a>\n    <span class=\"flex-spacer\"></span>\n    <!-- <a mat-button href=\"#\"><span class=\"fa fa-sign-in fa-lg\"></span>Login</a> -->\n</mat-toolbar>\n\n<div class=\"container-fluid\">\n\n    <div fxFlex fxFlex.gt-sm=\"50%\">\n        <h1>Clime</h1>\n        <p>We measure to serve correct!, We take inspiration from free and trusted weather sources to get and serve data</p>\n    </div>\n    <div  fxFlex fxFlex.gt-sm=\"20%\" class=\"img-size\">\n        <i class=\"fas fa-3x fa-cloud cloud\"></i>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { WeatherService } from '../services/weather.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  //test code\n  public weatherSearchForm:FormGroup;\n  public weatherData: any;\n  //test code ends\n  formValues:any;\n  constructor( private formBuilder: FormBuilder,\n     private weatherService: WeatherService ) { }\n\n  ngOnInit(): void {\n    //test code\n    this.weatherSearchForm = this.formBuilder.group({\n      location:[\"\"]\n    });\n    //test code ends\n    this.weatherData={\n      main:{},\n      isDay:true\n     }\n    this.getWeatherData();\n    console.log(this.weatherData);\n  }\n\n//test code\n  sendToService(formValues){\n    this.weatherService.getWeather(formValues.location).subscribe(data=>{\n      this.weatherData = data;\n      console.log(this.weatherData);\n    });\n  }\n//test code ends\n\n\n  getWeatherData(){\n    fetch('http://api.openweathermap.org/data/2.5/weather?q=Delhi&appid=e973ee11c9e475320e79113b372aa0a4')\n    .then(response => response.json())\n    .then(data=>{this.setWeatherData(data);})\n    \n  }\n\n  setWeatherData(data){\n    this.weatherData = data;\n    let sunsetTime = new Date(this.weatherData.sys.sunset*1000);\n    this.weatherData.sunset_time = sunsetTime.toLocaleTimeString();\n    let currentDate = new Date();\n    this.weatherData.isDay = (currentDate.getTime()< sunsetTime.getTime());\n    this.weatherData.temp_celcius = (this.weatherData.main.temp -273.15).toFixed(0);\n    this.weatherData.temp_min = (this.weatherData.main.temp_min -273.15).toFixed(0);\n    this.weatherData.temp_max = (this.weatherData.main.temp_max -273.15).toFixed(0);\n    this.weatherData.temp_feels_like = (this.weatherData.main.feels_like -273.15).toFixed(0);\n  }\n  }\n\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"searchNav\">\n                <form\n                [formGroup]=\"weatherSearchForm\"\n                (ngSubmit)=\"sendToService(weatherSearchForm.value)\">\n                <div class=\"form-group\">\n                    <input\n                    class=\"form-control\"\n                    type=\"text\"\n                    id=\"weatherLocation\"\n                    aria-describedby=\"weatherLocation\"\n                    placeholder=\"Input a Location\"\n                    formControlName=\"location\"\n                    />\n                    </div>\n                    <div class=\"text-center\">\n                        <span class=\"button\"><button mat-button>search</button></span> \n                 </div>\n                </form>\n            </div>\n        </div>\n        </div>\n    </div>\n    <div class=\"row\" class=\"col d-flex justify-content-center\">\n        <div class=\"col-sm\">\n\n            <div  fxLayout=\"row\"\n            fxLayout.sm=\"column\"\n            fxLayout.xs=\"column\"\n            fxLayoutAlign.gt-md=\"space-around center\"\n            fxLayoutGap=\"10px\">\n            <div id=\"divWeatherMain\">\n                <div class=\"weatherrow cloudDiv\">\n                    <i class=\"fas fa-3x fa-cloud cloud\"></i>\n                </div>\n                <div class=\"weatherrow\" style=\"font-size: 32px; margin-top: 5px;\"> {{(weatherData.main.temp -273.15).toFixed(0)}}° </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\"> {{(weatherData.main.temp_min -273.15).toFixed(0)}} ° / {{(weatherData.main.temp_max -273.15).toFixed(0)}} ° </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\"> Feels like: {{(weatherData.main.feels_like -273.15).toFixed(0)}} ° </div>\n                <div class=\"weatherrow\" style=\"font-size: 25px; margin-top: 10px;\"> {{weatherData.name}} </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\">Humidity: {{weatherData.main.humidity}}% </div>\n            </div>\n            </div>\n\n        </div>\n\n</div>\n\n\n\n<!-- <div class=\"container\">\n\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"searchNav\">\n             <input type =\"text\" placeholder=\"Want to search for specific city?\"> \n              <span class=\"button\"><button mat-button>search</button></span>   \n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm\">\n\n            <div  fxLayout=\"row\"\n            fxLayout.sm=\"column\"\n            fxLayout.xs=\"column\"\n            fxLayoutAlign.gt-md=\"space-around center\"\n            fxLayoutGap=\"10px\">\n            <div id=\"divWeatherMain\">\n                <div class=\"weatherrow\" *ngIf = \"weatherData.isDay\">\n                    <i class=\"fas fa-3x fa-sun sun\"></i>\n                </div>\n                <div class=\"weatherrow\"  *ngIf = \"!weatherData.isDay\">\n                    <i class=\"fas fa-3x fa-moon moon\"></i>\n                </div>\n                <div class=\"weatherrow cloudDiv\">\n                    <i class=\"fas fa-3x fa-cloud cloud\"></i>\n                </div>\n                <div class=\"weatherrow\" style=\"font-size: 32px; margin-top: 5px;\"> {{weatherData.temp_celcius}}° </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\"> {{weatherData.temp_min}} ° / {{weatherData.temp_max}} ° </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\"> Feels like: {{weatherData.temp_feels_like}} ° </div>\n                <div class=\"weatherrow\" style=\"font-size: 25px; margin-top: 10px;\"> {{weatherData.name}} </div>\n                <div class=\"weatherrow\" style=\"font-size: 12px;\">Humidity: {{weatherData.main.humidity}}% </div>\n            </div>\n            </div>\n\n        </div>\n    </div>\n\n</div> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent} from './home/home.component';\r\nimport { TodayComponent } from './today/today.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\nexport const routes:Routes= [\r\n    { path: '', redirectTo: '/home', pathMatch:'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'about', component: AboutComponent },\r\n    { path: 'search-for-coods', component: TodayComponent }\r\n];","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n   public apikey = \"e973ee11c9e475320e79113b372aa0a4\";\n  constructor(private http: HttpClient ){}\n  //test-code\n  getWeather(location){\n    return this.http.get('http://api.openweathermap.org/data/2.5/weather?q='+location+'&appid='+ this.apikey);\n  }\n  //test-code ends\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeathercoordService {\n  apikey = 'e973ee11c9e475320e79113b372aa0a4';\n   icon_id;\n  constructor(private http: HttpClient) { }\n\n  //test code\n  getWeather(lat,lon){\n    return this.http.get(\n      'http://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&appid=e973ee11c9e475320e79113b372aa0a4'\n    );\n  }\n  //test-code ends\n\n  getweatherIcon(icon_id){\n    return this.http.get(\n      'http://openweathermap.org/img/wn/'+icon_id+'@2x.png'\n    );\n  }\n \n}\n","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { WeathercoordService } from '../services/weathercoord.service';\n\n\n@Component({\n  selector: 'app-today',\n  templateUrl: './today.component.html',\n  styleUrls: ['./today.component.css']\n})\nexport class TodayComponent implements OnInit {\n  //test code\n  public weatherSearchForm:FormGroup;\n  public weatherData: any;\n  public formValues:any;\n  ///test code ends\n\n  constructor( private weathercoordService: WeathercoordService,\n      private formBuilder:FormBuilder\n    ) { }\n\n  ngOnInit(): void {\n\n      this.weatherSearchForm = this.formBuilder.group({\n        lat:[\"\"],\n        lon:[\"\"]\n      });\n    \n    this.weatherData={\n      main:{},\n      isDay:true\n     }\n    this.getWeatherData();\n    console.log(this.weatherData);\n  \n  }\n\n  \nsendtoService(formValues){\n  this.weathercoordService.getWeather(formValues.lat, formValues.lon).subscribe(data=>{\n    this.weatherData=data;\n    console.log(this.weatherData);\n    //this.icon = this.weatherData.weather.icon[0];\n  });\n}\n\n\ngetWeatherData(){\n  fetch('http://api.openweathermap.org/data/2.5/weather?q=Delhi&appid=e973ee11c9e475320e79113b372aa0a4')\n  .then(response => response.json())\n  .then(data=>{this.setWeatherData(data);})\n  \n}\n\nsetWeatherData(data){\n  this.weatherData = data;\n  let sunsetTime = new Date(this.weatherData.sys.sunset*1000);\n  this.weatherData.sunset_time = sunsetTime.toLocaleTimeString();\n  let currentDate = new Date();\n  this.weatherData.isDay = (currentDate.getTime()< sunsetTime.getTime());\n  this.weatherData.temp_celcius = (this.weatherData.main.temp -273.15).toFixed(0);\n  this.weatherData.temp_min = (this.weatherData.main.temp_min -273.15).toFixed(0);\n  this.weatherData.temp_max = (this.weatherData.main.temp_max -273.15).toFixed(0);\n  this.weatherData.temp_feels_like = (this.weatherData.main.feels_like -273.15).toFixed(0);\n}\n\n}","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"text-center\">\n      <form\n          [formGroup]=\"weatherSearchForm\"\n          (ngSubmit)=\"sendtoService(weatherSearchForm.value)\">\n      <input calss=\"form-control\"\n      type=\"text\"\n      id=\"weatherlat\"\n      placeholder=\"Enter latitude\"\n      formControlName=\"lat\"/>\n      \n      <input calss=\"form-control\"\n      type=\"text\"\n      id=\"weatherlat\"\n      placeholder=\"Enter longitude\"\n      formControlName=\"lon\"/>\n      <span class=\"button\"><button mat-button  class=\"btn btn-success btn-md\"> Search for weather</button></span> \n  </form>\n  </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n\n      <div  fxLayout=\"row\"\n      fxLayout.sm=\"column\"\n      fxLayout.xs=\"column\"\n      fxLayoutAlign.gt-md=\"space-around center\"\n      fxLayoutGap=\"10px\">\n      <div id=\"divWeatherMain\">\n          <div class=\"weatherrow cloudDiv\">\n              <i class=\"fas fa-3x fa-cloud cloud\"></i>\n          </div>\n          <div class=\"weatherrow\" style=\"font-size: 32px; margin-top: 5px;\"> {{(weatherData.main.temp -273.15).toFixed(0)}}° </div>\n          <div class=\"weatherrow\" style=\"font-size: 12px;\"> {{(weatherData.main.temp_min -273.15).toFixed(0)}} ° / {{(weatherData.main.temp_max -273.15).toFixed(0)}} ° </div>\n          <div class=\"weatherrow\" style=\"font-size: 12px;\"> Feels like: {{(weatherData.main.feels_like -273.15).toFixed(0)}} ° </div>\n          <div class=\"weatherrow\" style=\"font-size: 25px; margin-top: 10px;\"> {{weatherData.name}} </div>\n          <div class=\"weatherrow\" style=\"font-size: 12px;\">Humidity: {{weatherData.main.humidity}}% </div>\n      </div>\n      </div>\n  </div>\n</div>\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}